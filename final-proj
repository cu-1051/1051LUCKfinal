#black jack w turtle graphics
#CIS1051, 2024

import random  

#variables
#deck of cards, player & dealer hands
playerIn = True
dealerIn = True

deck = [2,3,4,5,6,7,8,9,10, 'A','J','Q','K',
        2,3,4,5,6,7,8,9,10, 'A','J','Q','K',
        2,3,4,5,6,7,8,9,10, 'A','J','Q','K',
        2,3,4,5,6,7,8,9,10, 'A','J','Q','K',
        ]
playerHand = []
dealerHand = []

#function to deal out cards
def dealCard(turn):
    card = random.choice(deck)
    turn.append(card)
    deck.remove(card)
    #choosing a random card from the deck, adding to
    #whoever's turn it is, removing the card from deck
    
#calculate the total of each hand
def totalHand(turn):
    total = 0
    face = ['J','Q','K']
    for card in turn:
        if card in range(1,11):
            total += card
        elif card in face:
            total += 10
        else: #accounts solely for the 'A', not in face list
            if total > 11:
                total +=1
            else:
                total +=11
    return total
            #totalHand function subject to change ^

#function to check the dealer's hand
def revealDealerHand():
    if len(dealerHand) == 2:
        return dealerHand[0]
    elif len(dealerHand) > 2:
        return dealerHand[0], dealerHand[1]
    #maybe offer the option where the dealer's hand is hidden or not

#maybe put this all in a function (loops)
for _ in range(2):
    dealCard(dealerHand)
    dealCard(playerHand)

print("['",dealerHand[0],"', 'X']")
print(playerHand)

while playerIn or dealerIn:
    print("Dealer has ",revealDealerHand()," and Unkown Card X")
    print("You have ", playerHand, " for a total of",
          totalHand(playerHand)) #translate face cards into ints
    if playerIn:
        stayOrHit = input("1: Stay\n2: Hit\n")
    if totalHand(dealerHand) > 16:
        dealerIn = False
    else:
        dealCard(dealerHand)
    if stayOrHit == '1':
        playerIn = False
    else:
        dealCard(playerHand)
    if totalHand(playerHand) >= 21: #total FUNCTION
        break
    elif totalHand(dealerHand) >= 21:
        break

#TURTLE SECTION
#turtle section of black jack final proj
import turtle
import tkinter
W = turtle.Turtle()
W.shape("triangle")
W.width("5")
W.color("black")
W.speed(10)


"""wn = turtle.Screen()
wn.title("BlackJack")
canvas = wn.getcanvas()
canvas.creat_image"""
turtle.setup(965, 600)
turtle.bgcolor("black")
turtle.bgpic(picname="Blackjack.png")

def sparkle(turtle):
    for _ in range(4):
        turtle.speed(10)
        turtle.circle(20,90)
        turtle.right(180)
        
def winningAnimation(turtle):
    turtle.penup()
    turtle.fd(-250)
    turtle.pendown()
    turtle.write("YOU WON!",
                 move=True,
                 align='left' ,
                 font = ("Futura",
                         48, "bold"))
    turtle.penup()
    turtle.left(90)
    turtle.fd(70)
    turtle.pendown()
    turtle.pensize(4)
    turtle.width(4)
    turtle.color("gold")
    sparkle(turtle)
    turtle.left(90)
    turtle.penup()
    turtle.fd(200)
    turtle.pendown()
    sparkle(turtle)

    
def losingAnimation(turtle):
    turtle.penup()
    turtle.fd(-250)
    turtle.pendown()
    turtle.write("YOU LOST!", move=True, align='left' ,
                 font = ("Futura",48, "bold"))
    turtle.right(90)
    turtle.penup()
    turtle.fd(50)
    turtle.left(90)
    turtle.fd(-100)
    turtle.write("better luck next time..", move=True, align='left' ,
                 font = ("Futura",30, "italic"))






#RESULTS        
if totalHand(playerHand) == 21:
    print("\nYou have ", playerHand," for a total of",
          totalHand(playerHand), "and the dealer has ",
          dealerHand, "for a total of", totalHand(dealerHand))
    winningAnimation(W)
    #W.done()
    print("Blackjack! You Win!")#maybe add a turtle animation for winning
elif totalHand(dealerHand) == 21:
    print("\nYou have ", playerHand," for a total of",
          totalHand(playerHand), "and the dealer has ",
          dealerHand, "for a total of", totalHand(dealerHand))
    losingAnimation(W)
    #W.done()
    print("Blackjack! Dealer Wins.")
elif totalHand(playerHand) > 21:
    print("\nYou have ", playerHand," for a total of",
          totalHand(playerHand), "and the dealer has ",
          dealerHand, "for a total of", totalHand(dealerHand))
    losingAnimation(W)
    #W.done()
    print("Bust! Dealer Wins.")
elif totalHand(dealerHand) > 21:
    print("\nYou have ", playerHand," for a total of",
          totalHand(playerHand), "and the dealer has ",
          dealerHand, "for a total of", totalHand(dealerHand))
    winningAnimation(W)
    #W.done()
    print("Dealer bust! You Win!")
elif 21 - (totalHand(dealerHand)) < 21 - (totalHand(playerHand)):
    print("\nYou have ", playerHand," for a total of",
          totalHand(playerHand), "and the dealer has ",
          dealerHand, "for a total of", totalHand(dealerHand))
    losingAnimation(W)
    #W.done()
    print("Dealer Wins.")
elif 21 - (totalHand(dealerHand)) > 21 - (totalHand(playerHand)):
    print("\nYou have ", playerHand," for a total of",
          totalHand(playerHand), "and the dealer has ",
          dealerHand, "for a total of", totalHand(dealerHand))
    winningAnimation(W)
    #W.done()
    print("You Win!")


#more on turtle animation:
    #could be with a cards background and fireworks,
    #like old style windows solitaire celebrations
    


#additional option for stay or hit besides 1 or 2: S or H, Stay or Hit etc
    #offer the option to pass
    #maybe have another player
    
